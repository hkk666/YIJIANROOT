name: YIJIANROOT

on:
  workflow_dispatch:
    inputs:
      rom_url:
        description: 'ROM 下载直链'
        required: true
        default: ''
      zip_name:
        description: 'ZIP 包名称'
        required: true
        default: 'K60Pro-V14.0.23.4.17.DEV'

jobs:
  YIJIANROOT:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt install aria2 p7zip-full
          pip install -U aligo
          mkdir tmp
          wget https://github.com/ssut/payload-dumper-go/releases/download/1.2.0/payload-dumper-go_1.2.0_linux_amd64.tar.gz -P ~/tmp/
          tar zxvf ~/tmp/payload-dumper-go_1.2.0_linux_amd64.tar.gz -o payload-dumper-go
          BUILD_TIME=$(TZ=Asia/Shanghai date +"%m%d%H%M")
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV

      - name: 下载 ROM
        run: |
          aria2c -s 10 -x 10 -d . -o ~/firmware.zip "${{ github.event.inputs.rom_url }}"

      - name: 提取镜像
        run: |
          ./payload-dumper-go -p boot,init_boot -o ~/output .//home/runner/firmware.zip

      - name: 创建镜像信息
        run: |
          cd ${{ github.workspace }}
          touch info.md
          echo "提交日期：$(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M:%S')" >> info.md
          echo "ROM 下载直链：${{ github.event.inputs.rom_url }}" >> info.md
          cd ~/output/
          if [ -f "init_boot.img" ]; then rm boot.img; fi
          du -h --total *.img | sed 's/^/修补镜像大小： /' | head -n 1 >> ${{ github.workspace }}/info.md

      - name: 创建一键 ROOT ZIP
        run: |
          cd ~
          echo "release_tag=${{ github.event.inputs.zip_name }}_$(date +%Y.%m.%d)" >> $GITHUB_ENV
          git clone https://github.com/tosasitill/YIJIANROOT_add.git -b 25.2 XIUBU
          cd XIUBU
          mv ~/output/* ./
          mkdir done
          ./boot.sh
          cd ~
          git clone https://github.com/tosasitill/YIJIANROOT_add.git "${{ github.event.inputs.zip_name }}"
          mv ~/XIUBU/done/*.img ~/${{ github.event.inputs.zip_name }}
          cd ${{ github.event.inputs.zip_name }}
          rm -rf .git
          cd ~
          7z a -tzip -mx9 ${{ github.event.inputs.zip_name }}.zip ${{ github.event.inputs.zip_name }}/

      - name: 上传 ZIP
        uses: ncipollo/release-action@v1.12.0
        with:
            artifacts: "~/${{ github.event.inputs.zip_name }}.zip"
            bodyfile: "${{ github.workspace }}/info.md"
            tag: ${{ env.release_tag }}
            token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Aliyun
        run: |       
             python aliyun.py --token "${{ secrets.ALIYUN_TOKEN }}" --uploadFloder "test" --file "~/${{ github.event.inputs.zip_name }}.zip" 
